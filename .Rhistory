?ggplot
??ggplot
library(tools)
library(tcltk)
detach("package:tcltk", unload = TRUE)
detach("package:tools", unload = TRUE)
library(boot)
library(class)
detach("package:boot", unload = TRUE)
detach("package:class", unload = TRUE)
library(googlesheets4)
read_sheet("https://docs.google.com/spreadsheets/d/1tulTxVJmg1LQhwNnbpqVrmUnT3Sp2oxh9pWuN_kuD_w/edit?gid=1937321879#gid=1937321879")
read_sheet("https://docs.google.com/spreadsheets/d/1tulTxVJmg1LQhwNnbpqVrmUnT3Sp2oxh9pWuN_kuD_w/edit?gid=0#gid=0")
read_sheet("https://docs.google.com/spreadsheets/d/1tulTxVJmg1LQhwNnbpqVrmUnT3Sp2oxh9pWuN_kuD_w/edit?gid=1772957009#gid=1772957009")
library(googlesheets4)
read_sheet("https://docs.google.com/spreadsheets/d/1tulTxVJmg1LQhwNnbpqVrmUnT3Sp2oxh9pWuN_kuD_w/edit?gid=1937321879#gid=1937321879")
ggplot(data, aes(x = treatment, y = normalized_resp_rate)) +
geom_boxplot() +
labs(title = "Normalized Mussel Respiration Rates by Treatment",
x = "Treatment",
y = "Normalized Respiration Rate") +
theme_minimal()
# View the first few rows
head(data)
# Summary of the data
summary(data)
# Summary of the data
summary(data)
# View the first few rows
head(Lab5_Data)
data <- read_sheet("https://docs.google.com/spreadsheets/d/1tulTxVJmg1LQhwNnbpqVrmUnT3Sp2oxh9pWuN_kuD_w/edit?gid=1937321879#gid=1937321879")
dafa <- read_sheet("https://docs.google.com/spreadsheets/d/1tulTxVJmg1LQhwNnbpqVrmUnT3Sp2oxh9pWuN_kuD_w/edit?gid=0#gid=0")
library(googlesheets4)
# Google Sheets URL
sheet_url <- "https://docs.google.com/spreadsheets/d/1tulTxVJmg1LQhwNnbpqVrmUnT3Sp2oxh9pWuN_kuD_w/edit?gid=1937321879"
# Read the data
data <- read_sheet(sheet_url)
# View structure
str(data)
# Rename relevant columns (modify based on actual column names)
colnames(data) <- tolower(colnames(data)) # Standardize column names
# Ensure treatment column exists
if (!"treatment" %in% colnames(data)) stop("Treatment column not found!")
# Filter data for only warm and cold treatments
data_filtered <- subset(data, treatment %in% c("warm", "cold"))
# Convert treatment to a factor
data_filtered$treatment <- as.factor(data_filtered$treatment)
library(respirometry)
# Ensure respiration rate and mass columns exist
if (!"resp_rate" %in% colnames(data_filtered) | !"mass" %in% colnames(data_filtered)) {
stop("Respiration rate or mass column not found!")
}
# Extract mass and respiration rate
mass <- data_filtered$mass
resp_rate <- data_filtered$resp_rate
# Estimate the scaling coefficient b
scaling_results <- calc_b(mass, resp_rate)
library(respirometry)
install.packages("dplyr")
install.packages ("tidyverse")
install.packages ("ggplot2")
install.packages ("readr")
install.packages("stringr")
install.packages("gridExtra")
install.packages("grid")
install.packages("lattice")
install.packages("Rmisc")
library(plyr)
library(dplyr)
library(tidyverse)
library(readr)
library(stringr)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
library(Rmisc)
#Length - Cold
library(googlesheets4) #Google sheets version of reading in our data
Lab6_Data <- read_sheet('https://docs.google.com/spreadsheets/d/1tulTxVJmg1LQhwNnbpqVrmUnT3Sp2oxh9pWuN_kuD_w/edit?gid=1937321879#gid=1937321879')
Lab6_Data <- read_sheet('https://docs.google.com/spreadsheets/d/1XarUI1vBkj7GK3XpmxV1Ytoh2srI8o0HU_i93V-YabA/edit?gid=0#gid=0')
install.packages("dplyr")
install.packages ("tidyverse")
install.packages("tidyverse")
install.packages("dplyr")
install.packages ("ggplot2")
install.packages("ggplot2")
library(plyr)
library(dplyr)
library(tidyverse)
library(readr)
library(stringr)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
library(Rmisc)
#Length - Cold
library(googlesheets4) #Google sheets version of reading in our data
Lab6_Data <- read_sheet('https://docs.google.com/spreadsheets/d/1XarUI1vBkj7GK3XpmxV1Ytoh2srI8o0HU_i93V-YabA/edit?gid=0#gid=0')
cold <- subset(Lab6_Data, Treatment=="cold", select=c((Mussel_Weight_Specific_Respiration_Rate, Tank)) #Collects the cold tank data into one table
cold <- subset(Lab6_Data, Treatment=="cold", select=c(("Mussel_Weight_Specific_Respiration_Rate", "Tank")) #Collects the cold tank data into one table
cold <- subset(Lab6_Data, Treatment=="cold", select=c("Mussel_Weight_Specific_Respiration_Rate", "Tank") #Collects the cold tank data into one table
n.cold <- length(cold$Mussel_Weight_Specific_Respiration_Rate) #Shows the sample size of cold tank
colnames(cold)
cold <- subset(Lab6_Data, Treatment=="cold", select=c("Mussel_Weight_Specific_Respiration_Rate", "Tank") #Collects the cold tank data into one table
n.cold <- length(cold$Mussel_Weight_Specific_Respiration_Rate) #Shows the sample size of cold tank
colnames(cold)
n.cold <- length(cold$`Mussel_Weight_Specific_Respiration_Rate`) #Shows the sample size of cold tank
Lab6_Data <- read_sheet('https://docs.google.com/spreadsheets/d/1XarUI1vBkj7GK3XpmxV1Ytoh2srI8o0HU_i93V-YabA/edit?gid=0#gid=0')
View(Lab6_Data)
cold <- subset(Lab6_Data, Treatment=="cold", select=c("Mussel_Weight_Specific_Respiration_Rate", "Tank") #Collects the cold tank data into one table
Total.cold <- sum(cold$Length_cm) #Shows the total length of the cold mussels
cold <- subset(Lab6_Data, Treatment=="cold", select=c("Mussel_Weight_Specific_Respiration_Rate", "Tank") #Collects the cold tank data into one table
n.cold <- length(cold$`Mussel_Weight_Specific_Respiration_Rate`) #Shows the sample size of cold tank
cold <- subset(Lab6_Data, Treatment=="cold", select=c("Mussel_Weight_Specific_Respiration_Rate", "Tank")) #Collects the cold tank data into one table
cold <- subset(Lab6_Data, Treatment=="cold", select=c("Mussel_Weight_Specific_Respiration_Rate", "Treatment")) #Collects the cold tank data into one table
View(cold)
n.cold <- length(cold$`Mussel_Weight_Specific_Respiration_Rate`) #Shows the sample size of cold tank
Total.cold <- sum(cold$Mussel_Weight_Specific_Respiration_Rate) #Shows the total length of the cold mussels
Total.cold <- sum(cold$`Mussel_Weight_Specific_Respiration_Rate`) #Shows the total length of the cold mussels
Total.cold <- sum(cold$`Mussel_Weight_Specific_Respiration_Rate`) #Shows the total length of the cold mussels
n.cold <- length(cold$Mussel_Weight_Specific_Respiration_Rate) #Shows the sample size of cold tank
Total.cold <- sum(cold$`Mussel_Weight_Specific_Respiration_Rate`) #Shows the total length of the cold mussels
Total.cold <- sum(cold$Mussel_Weight_Specific_Respiration_Rate) #Shows the total length of the cold mussels
Mean.cold <- mean(cold$Mussel_Weight_Specific_Respiration_Rate) #Shows the mean length of the cold tank
Lab6_Data <- read_sheet('https://docs.google.com/spreadsheets/d/1XarUI1vBkj7GK3XpmxV1Ytoh2srI8o0HU_i93V-YabA/edit?gid=0#gid=0')
cold <- subset(Lab6_Data, Treatment=="cold", select=c("Mussel_Weight_Specific_Respiration_Rate", "Treatment")) #Collects the cold tank data into one table
n.cold <- length(cold$Mussel_Weight_Specific_Respiration_Rate) #Shows the sample size of cold tank
Total.cold <- sum(cold$Mussel_Weight_Specific_Respiration_Rate) #Shows the total length of the cold mussels
Lab6_Data <- read_sheet('https://docs.google.com/spreadsheets/d/1XarUI1vBkj7GK3XpmxV1Ytoh2srI8o0HU_i93V-YabA/edit?gid=0#gid=0')
cold <- subset(Lab6_Data, Treatment=="cold", select=c("Mussel_Weight_Specific_Respiration_Rate", "Treatment")) #Collects the cold tank data into one table
n.cold <- length(cold$Mussel_Weight_Specific_Respiration_Rate) #Shows the sample size of cold tank
Total.cold <- sum(cold$Mussel_Weight_Specific_Respiration_Rate) #Shows the total length of the cold mussels
Mean.cold <- mean(cold$Mussel_Weight_Specific_Respiration_Rate) #Shows the mean length of the cold tank
CF.cold <- Total.cold^2/n.cold #Shows the correction factor of the cold Data
AS.cold <- sum(cold$Length_cm^2) #Shows the added squares of the cold tank
AS.cold <- sum(cold$LMussel_Weight_Specific_Respiration_Rate^2) #Shows the added squares of the cold tank
AS.cold <- sum(cold$Mussel_Weight_Specific_Respiration_Rate^2) #Shows the added squares of the cold tank
SS.cold <- AS.cold-(Total.cold^2/n.cold) #Shows the sum of squares of the cold tank
#Length - Hot
warm <- subset(Lab3_Data, Treatment=="warm", select=c((Mussel_Weight_Specific_Respiration_Rate), Treatment)) #Collects the hot data into one table
#Length - Hot
warm <- subset(Lab6_Data, Treatment=="warm", select=c((Mussel_Weight_Specific_Respiration_Rate), Treatment)) #Collects the hot data into one table
n.warm <- length(warm$Mussel_Weight_Specific_Respiration_Rate) #Shows the sample size of hot tank
Total.warm <- sum(hot$Mussel_Weight_Specific_Respiration_Rate) #Shows the total length of the hot mussels
Total.warm <- sum(warm$Mussel_Weight_Specific_Respiration_Rate) #Shows the total length of the hot mussels
Mean.warm <- mean(warm$Mussel_Weight_Specific_Respiration_Rate) #Shows the mean length of the hot tank
CF.warm <- Total.warm^2/n.warm #Shows the correction factor of the hot Data
AS.warm <- sum(warm$Mussel_Weight_Specific_Respiration_Rate^2) #Shows the added squares of the hot data
SS.warm <- AS.warm-(Total.warm^2/n.warm) #shows the sum of squares of the hot data
#Length - Pooled Statistics
SS.Lab6_data <- SS.cold + SS.warm #Shows the pooled sum of squares
df.Lab6_data <- (n.cold-1)+(n.warm-1) #Shows the pooled degree of freedom
Var.Lab6_data <- (SS.cold+SS.warm)/df.Lab3_warm #Shows the pooled variance of. In other words, the pooled sum of squares divided by the pooled degrees of freedom.
Var.Lab6_data <- (SS.cold+SS.warm)/df.Lab6_warm #Shows the pooled variance of. In other words, the pooled sum of squares divided by the pooled degrees of freedom.
Var.Lab6_data <- (SS.cold+SS.warm)/df.Lab6_data #Shows the pooled variance of. In other words, the pooled sum of squares divided by the pooled degrees of freedom.
s.Lab6_data <- sqrt(Var.Lab6_data) #Shows the pooled standard deviation
StEr.Lab6_Data <- s.Lab6_data*sqrt((1/n.cold)+(1/n.warm)) #Shows the standard error of the difference between the means.
t <- (Mean.cold-Mean.warm)/StEr.Lab6_data #Shows the t-statistic or the statistic divided by the standard error.
t.test(cold$Mussel_Weight_Specific_Respiration_Rate,warm$Mussel_Weight_Specific_Respiration_Rate) #Conducts the first t-test.
#Length - Boxplot
boxplot(Mussel_Weight_Specific_Respiration_Rate~Treatment,data=Lab6_Data,main="Weight Specific Respiration Rate",xlab="Mussels in Hot or Cold Temperatures", ylab="Body Length (cm)") #Produces the image of the boxplot using the data from above.
#Length - Boxplot
boxplot(Mussel_Weight_Specific_Respiration_Rate~Treatment,data=Lab6_Data,main="Mussel Weight Specific Respiration Rate",xlab="Mussels in Hot or Cold Temperatures", ylab="Weight Specific Respiration Rate") #Produces the image of the boxplot using the data from above.
t.test(cold$Mussel_Weight_Specific_Respiration_Rate,warm$Mussel_Weight_Specific_Respiration_Rate) #Conducts the first t-test.
#-------------------------------------------------------------------------------------------------------
library(googlesheets4)
library(dplyr)
#read data from google sheets
Lab4_Data <- read_sheet('https://docs.google.com/spreadsheets/d/1uiOnSrrdTOMhUeShFZjtRp0TUAiw9ZPnKljUYEIF1qM/edit?gid=0#gid=0')
#manually put in data
standard_data <- data.frame(
Concentration = c(250, 125, 50, 25, 5, 0),
Absorbance = c(0.54, 0.41, 0.325, 0.265, 0.21, 0.15))
print(standard_data)
#fit a linear model to standard data
standard_curve_model <- lm(Concentration ~ Absorbance, data = standard_data)
#print the model summaary to get equation and R squared
summary(standard_curve_model)
#print the model summaary to get equation and R squared
summary(standard_curve_model)
#predict function finds concentration of unknown samples
unknown_absorbance <- c(0.75, 0.49, 0.4, 0.42)
predicted_concentrations <- predict(standard_curve_model, newdata = data.frame(Absorbance = unknown_absorbance))
#prints the predicted concentrations
print(predicted_concentrations)
#----------------------------------------------------------------------------
concentrations <- c(250,125,50,25,5,0)
absorbance_values <- c(0.54, 0.41, 0.325, 0.265, 0.21, 0.15)
absorbance_values <- c(0.54, 0.41, 0.325, 0.265, 0.21, 0.15)
absorbance_values <- c(0.54, 0.41, 0.325, 0.265, 0.21, 0.15)
absorbance_values <- c(0.54, 0.41, 0.325, 0.265, 0.21, 0.15)
model <- lm(Concentration ~ Absorbance, data=standard_data) #runs a linear regression
coe <- coef(model) #extracts coefficents
R2 <- summary(model)$r.squared #Calculates R2
plot(Concentration ~ Absorbance, data=standard_data) #creates scatterplot
abline(lm(Concentration ~ Absorbance, data=standard_data)) #plots linerar regression line
summary(model) #summarizes scatterplot
cf <- round(coef(model), 2) #round coefficients to 2 decimal places
cf #shows coeffieicents rounded
eq <- paste0("eq = ", cf[1],
ifelse(sign(cf[2])==1, "+", "-"), abs(cf[2]), "x") #generates linear regression with variables above
mtext(eq, 3, line=2) #adds equation onto plot
mtext(paste("R2 =", round(R2, 2)), 3, line = -3) #adds R2 onto plot
#prints the predicted concentrations
print(predicted_concentrations)
##### comparisons
Lab4_BP.Data <- read_sheet('https://docs.google.com/spreadsheets/d/1ynF8GDJRfnlkbDPAxPLJs3AqDirAwW231UXl6d9GGt4/edit?gid=0#gid=0')
##### comparisons
Lab4_BP.Data <- read_sheet('https://docs.google.com/spreadsheets/d/1ynF8GDJRfnlkbDPAxPLJs3AqDirAwW231UXl6d9GGt4/edit?gid=0#gid=0')
Tank <- subset(Lab4_BP.Data, Origin=="Cold", select=c(mg_protein_per_g_mussel, Origin)#Telling R to subset data from cold enteries
Wild <- subset(Lab4_BP.Data, Origin=="Warm", select=c(mg_protein_per_g_mussel, Origin)) #Telling R to subset data from hot enteries
Tank <- subset(Lab4_BP.Data, Origin=="Cold", select=c(mg_protein_per_g_mussel, Origin))#Telling R to subset data from cold enteries
Wild <- subset(Lab4_BP.Data, Origin=="Warm", select=c(mg_protein_per_g_mussel, Origin)) #Telling R to subset data from hot enteries
t.test(Tank$mg_protein_per_g_mussel,Wild$mg_protein_per_g_mussel)
boxplot(mg_protein_per_g_mussel ~ Tank, data = Lab4_Data, main = "Protein Concentration In Tank and Wild Conditions",
boxplot(mg_protein_per_g_mussel ~ Tank, data = Lab4_Data, main = "Protein Concentration In Tank and Wild Conditions",
boxplot(mg_protein_per_g_mussel ~ Tank, data = Lab4_BP.Data, main = "Protein Concentration In Tank and Wild Conditions",
boxplot(mg_protein_per_g_mussel ~ Origin, data = Lab4_BP.Data, main = "Protein Concentration In Tank and Wild Conditions",
##### comparisons
Lab4_BP.Data <- read_sheet('https://docs.google.com/spreadsheets/d/1ynF8GDJRfnlkbDPAxPLJs3AqDirAwW231UXl6d9GGt4/edit?gid=0#gid=0')
Tank <- subset(Lab4_BP.Data, Origin=="Cold", select=c(mg_protein_per_g_mussel, Origin))#Telling R to subset data from cold enteries
##### comparisons
Lab4_BP.Data <- read_sheet('https://docs.google.com/spreadsheets/d/1ynF8GDJRfnlkbDPAxPLJs3AqDirAwW231UXl6d9GGt4/edit?gid=0#gid=0')
Tank <- subset(Lab4_BP.Data, Origin=="Cold", select=c(mg_protein_per_g_mussel, Origin))#Telling R to subset data from cold enteries
Wild <- subset(Lab4_BP.Data, Origin=="Warm", select=c(mg_protein_per_g_mussel, Origin)) #Telling R to subset data from hot enteries
t.test(Tank$mg_protein_per_g_mussel,Wild$mg_protein_per_g_mussel)
View(Tank)
##### comparisons
Lab4_BP.Data <- read_sheet('https://docs.google.com/spreadsheets/d/1ynF8GDJRfnlkbDPAxPLJs3AqDirAwW231UXl6d9GGt4/edit?gid=0#gid=0')
Tank <- subset(Lab4_BP.Data, Origin=="Cold", select=c(mg_protein_per_g_mussel, Origin))#Telling R to subset data from cold enteries
Wild <- subset(Lab4_BP.Data, Origin=="Warm", select=c(mg_protein_per_g_mussel, Origin)) #Telling R to subset data from hot enteries
t.test(Tank$mg_protein_per_g_mussel,Wild$mg_protein_per_g_mussel)
Tank <- subset(Lab4_BP.Data, Origin=="Tank", select=c(mg_protein_per_g_mussel, Origin))#Telling R to subset data from cold enteries
Wild <- subset(Lab4_BP.Data, Origin=="Wild", select=c(mg_protein_per_g_mussel, Origin)) #Telling R to subset data from hot enteries
t.test(Tank$mg_protein_per_g_mussel,Wild$mg_protein_per_g_mussel)
boxplot(mg_protein_per_g_mussel ~ Origin, data = Lab4_BP.Data, main = "Protein Concentration In Tank and Wild Conditions",
boxplot(mg_protein_per_g_mussel ~ Origin, data = Lab4_BP.Data, main = "Protein Concentration In Tank and Wild Conditions",
boxplot(mg_protein_per_g_mussel ~ Origin, data = Lab4_BP.Data, main = "Protein Concentration In Tank and Wild Conditions",
xlab = "Tank or Wild Acclimated", ylab = "Protein Concentration (mg/g)",
col = c("blue", "red"))
boxplot(mg_protein_per_g_mussel ~ Origin, data = Lab4_BP.Data,
View(Lab4_BP.Data)
t.test(Tank$mg_protein_per_g_mussel,Wild$mg_protein_per_g_mussel)
boxplot(mg_protein_per_g_mussel ~ Origin, data = Lab4_BP.Data,
main = "Protein Concentration In Tank and Wild Conditions",
xlab = "Tank or Wild Acclimated",
ylab = "Protein Concentration (mg/g)",
col = c("blue", "red"))
###-------------------------------------------
Lab9_Data <- read_sheet('https://docs.google.com/spreadsheets/d/19hRPPrTSBrYAnmkVawVaQKs4bQfXyNOvlZwjydKBsuE/edit?gid=0#gid=0')
model <- lm(ETR ~ PAR, data=standard_data) #runs a linear regression
View(Lab9_Data)
model <- lm(ETR ~ PAR, data=standard_data) #runs a linear regression
View(Lab9_Data)
###-------------------------------------------
Lab9_Data <- read_sheet('https://docs.google.com/spreadsheets/d/19hRPPrTSBrYAnmkVawVaQKs4bQfXyNOvlZwjydKBsuE/edit?gid=0#gid=0')
model <- lm(ETR ~ PAR, data=standard_data) #runs a linear regression
View(Lab9_Data)
model <- lm(ETR ~ PAR, data=standard_data) #runs a linear regression
model <- lm(PAR ~ ETR, data=standard_data) #runs a linear regression
model <- lm(PAR ~ ETR, data=Lab9_Data) #runs a linear regression
coe <- coef(model) #extracts coefficents
R2 <- summary(model)$r.squared #Calculates R2
R2 <- summary(model)$r.squared #Calculates R2
plot(ETR ~ PAR, data=Lab9_Data) #creates scatterplot
plot(ETR ~ PAR, data=Lab9_Data, fill=Treatment) #creates scatterplot
plot(ETR ~ PAR, data=Lab9_Data, color=Treatment) #creates scatterplot
warnings()
plot(ETR ~ PAR, data=Lab9_Data, col=Treatment) #creates scatterplot
plot(ETR ~ PAR, data=Lab9_Data, col=Treatment c("blue", "red")) #creates scatterplot
plot(ETR ~ PAR, data=Lab9_Data, col= c("blue", "red")) #creates scatterplot
plot(ETR ~ PAR, data=Lab9_Data, col= Tank("blue"), Wild ("red")) #creates scatterplot
plot(ETR ~ PAR, data=Lab9_Data, col= c Tank("blue"), Wild ("red")) #creates scatterplot
###-------------------------------------------
Lab9_Data <- read_sheet('https://docs.google.com/spreadsheets/d/19hRPPrTSBrYAnmkVawVaQKs4bQfXyNOvlZwjydKBsuE/edit?gid=0#gid=0')
model <- lm(PAR ~ ETR, data=Lab9_Data) #runs a linear regression
coe <- coef(model) #extracts coefficents
R2 <- summary(model)$r.squared #Calculates R2
colors <- ifelse(Lab9_Data$Treatment == "Treatment", "blue", "red")
plot(ETR ~ PAR, data=Lab9_Data, col= colors() #creates scatterplot
plot(ETR ~ PAR, data=Lab9_Data, col= colors()) #creates scatterplot
colors <- ifelse(Lab9_Data$Treatment == "Treatment", "blue", "red")
colors <- ifelse(Lab9_Data$Treatment == "Tank", "blue", "red")
plot(ETR ~ PAR, data=Lab9_Data, col= colors()) #creates scatterplot
colors <- ifelse(Lab9_Data$Treatment == "Tank", "blue". "Wild", "red")
----------------------------
Lab4_BP.Data <- read_sheet('https://docs.google.com/spreadsheets/d/1ynF8GDJRfnlkbDPAxPLJs3AqDirAwW231UXl6d9GGt4/edit?gid=0#gid=0')
----------------------------
Lab4_BP.Data <- read_sheet('https://docs.google.com/spreadsheets/d/1ynF8GDJRfnlkbDPAxPLJs3AqDirAwW231UXl6d9GGt4/edit?gid=0#gid=0')
----------------------------
Lab4_BP.Data <- read_sheet('https://docs.google.com/spreadsheets/d/1ynF8GDJRfnlkbDPAxPLJs3AqDirAwW231UXl6d9GGt4/edit?gid=0#gid=0')
###-------------------------------------------
Lab9_Data <- read_sheet('https://docs.google.com/spreadsheets/d/19hRPPrTSBrYAnmkVawVaQKs4bQfXyNOvlZwjydKBsuE/edit?gid=0#gid=0')
model <- lm(PAR ~ ETR, data=Lab9_Data) #runs a linear regression
coe <- coef(model) #extracts coefficents
R2 <- summary(model)$r.squared #Calculates R2
colors <- ifelse(Lab9_Data$Treatment == "Tank", "blue")
plot(ETR ~ PAR, data=Lab9_Data, col= colors()) #creates scatterplot
R2 <- summary(model)$r.squared #Calculates R2
plot(ETR ~ PAR, data=Lab9_Data) #creates scatterplot
abline(lm(ETR ~ PAR, data=Lab9_Data)) #plots linerar regression line
summary(model) #summarizes scatterplot
cf <- round(coef(model), 2) #round coefficients to 2 decimal places
cf #shows coeffieicents rounded
eq <- paste0("eq = ", cf[1],
ifelse(sign(cf[2])==1, "+", "-"), abs(cf[2]), "x") #generates linear regression with variables above
mtext(eq, 3, line=2) #adds equation onto plot
mtext(paste("R2 =", round(R2, 2)), 3, line = -3) #adds R2 onto plot
#-------------------------------------------------------------------------------------------------------
library(googlesheets4)
library(dplyr)
#read data from google sheets
Lab4_Data <- read_sheet('https://docs.google.com/spreadsheets/d/1uiOnSrrdTOMhUeShFZjtRp0TUAiw9ZPnKljUYEIF1qM/edit?gid=0#gid=0')
#manually put in data
standard_data <- data.frame(
Concentration = c(250, 125, 50, 25, 5, 0),
Absorbance = c(0.54, 0.41, 0.325, 0.265, 0.21, 0.15))
print(standard_data)
#fit a linear model to standard data
standard_curve_model <- lm(Concentration ~ Absorbance, data = standard_data)
#print the model summaary to get equation and R squared
summary(standard_curve_model)
#predict function finds concentration of unknown samples
unknown_absorbance <- c(0.75, 0.49, 0.4, 0.42)
predicted_concentrations <- predict(standard_curve_model, newdata = data.frame(Absorbance = unknown_absorbance))
#prints the predicted concentrations
print(predicted_concentrations)
#----------------------------------------------------------------------------
concentrations <- c(250,125,50,25,5,0)
absorbance_values <- c(0.54, 0.41, 0.325, 0.265, 0.21, 0.15)
model <- lm(Concentration ~ Absorbance, data=standard_data) #runs a linear regression
coe <- coef(model) #extracts coefficents
R2 <- summary(model)$r.squared #Calculates R2
plot(Concentration ~ Absorbance, data=standard_data) #creates scatterplot
abline(lm(Concentration ~ Absorbance, data=standard_data)) #plots linerar regression line
summary(model) #summarizes scatterplot
cf <- round(coef(model), 2) #round coefficients to 2 decimal places
cf #shows coeffieicents rounded
eq <- paste0("eq = ", cf[1],
ifelse(sign(cf[2])==1, "+", "-"), abs(cf[2]), "x") #generates linear regression with variables above
mtext(eq, 3, line=2) #adds equation onto plot
mtext(paste("R2 =", round(R2, 2)), 3, line = -3) #adds R2 onto plot
##### comparisons ------------------------------------------
Lab4_BP.Data <- read_sheet('https://docs.google.com/spreadsheets/d/1ynF8GDJRfnlkbDPAxPLJs3AqDirAwW231UXl6d9GGt4/edit?gid=0#gid=0')
Tank <- subset(Lab4_BP.Data, Origin=="Tank", select=c(mg_protein_per_g_mussel, Origin))#Telling R to subset data from cold enteries
Wild <- subset(Lab4_BP.Data, Origin=="Wild", select=c(mg_protein_per_g_mussel, Origin)) #Telling R to subset data from hot enteries
t.test(Tank$mg_protein_per_g_mussel,Wild$mg_protein_per_g_mussel)
###-------------------------------------------
Lab9_Data <- read_sheet('https://docs.google.com/spreadsheets/d/19hRPPrTSBrYAnmkVawVaQKs4bQfXyNOvlZwjydKBsuE/edit?gid=0#gid=0')
model <- lm(PAR ~ ETR, data=Lab9_Data) #runs a linear regression
coe <- coef(model) #extracts coefficents
R2 <- summary(model)$r.squared #Calculates R2
plot(ETR ~ PAR, data=Lab9_Data) #creates scatterplot
abline(lm(ETR ~ PAR, data=Lab9_Data)) #plots linerar regression line
summary(model) #summarizes scatterplot
cf <- round(coef(model), 2) #round coefficients to 2 decimal places
cf #shows coeffieicents rounded
eq <- paste0("eq = ", cf[1],
ifelse(sign(cf[2])==1, "+", "-"), abs(cf[2]), "x") #generates linear regression with variables above
mtext(eq, 3, line=2) #adds equation onto plot
mtext(paste("R2 =", round(R2, 2)), 3, line = -3) #adds R2 onto plot
#prints the predicted concentrations
print(predicted_concentrations)
t.test(Tank$mg_protein_per_g_mussel,Wild$mg_protein_per_g_mussel)
